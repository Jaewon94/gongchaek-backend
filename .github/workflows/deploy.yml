name: Deploy To EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: SSH(원격접속)로 EC2에 접속하여 자동 배포하기
        uses: appleboy/ssh-action@v1.0.3
        env:
          APPLICATION_YML: ${{ secrets.APPLICATION_YML }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: APPLICATION_YML
          script: |
            # 해당 디렉토리로 이동
            cd /home/ubuntu/backend
            
            # 이전 프로세스 종료
            sudo fuser -k -n tcp 8080 || true
            
            # git pull 전에 변경사항 제거
            git reset --hard HEAD
            
            # git checkout main
            git checkout main
            
            # 코드 업데이트 및 빌드
            git pull origin main
            
            # resources 디렉토리 없으면 생성 및 application.yml 파일 생성
            mkdir -p src/main/resources
            echo "$APPLICATION_YML" > src/main/resources/application.yml
            
            # build 하기
            chmod +x ./gradlew 
            ./gradlew clean build
            
            # 애플리케이션 실행
            nohup java -jar build/libs/*SNAPSHOT.jar > ./output.log 2>&1 &
            
            # 배포 확인
            sleep 10
            if pgrep -f "*SNAPSHOT.jar" > /dev/null; then
              echo "Deployment successful"
            
              # 로그 확인을 위한 마지막 몇 줄 출력
              tail -n 50 ./output.log
            else
              echo "Deployment failed"
              cat ./output.log
              exit 1
            fi